---
import Tailwind from "../components/Icons/Tailwind.astro";
import Spring from "../components/Icons/Spring.astro";
import Angular from "../components/Icons/Angular.astro";
import Bootstrap from "../components/Icons/Bootstrap.astro";
import JavaScript from "../components/Icons/JavaScript.astro";
import HTML from "../components/Icons/HTML.astro";
import CSS from "../components/Icons/CSS.astro";
const TAGS = {
  SPRING: {
    name: "SpringBoot",
    class: "bg-[#365314] text-white",
    icon: Spring,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-[#3f3f46] text-white",
    icon: Angular,
  },
  BOOTSTRAP: {
    name: "Bootstrap",
    class: "bg-[#3b0764] text-white",
    icon: Bootstrap,
  },

  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-[#eab308] text-white",
    icon: JavaScript,
  },
  HTML: {
    name: "HTML",
    class: "bg-[#fca5a5] text-white",
    icon: HTML,
  },
  CSS: {
    name: "CSS",
    class: "bg-[#a855f7] text-white",
    icon: CSS,
  },
};

const PROYECTS = [
  {
    title: "Chole Tienda de vestidos.",
    description:
      "Web desarrollada y especializada en vestidos de fiesta y graduación. La página cuenta con una landing page que proporciona información sobre la tienda y botones que dirigen al Instagram oficial y a la plataforma para reservar turnos. Implementé una sección de administrador con inicio de sesión, donde las empleadas y la administradora pueden acceder. Dentro de esta sección, hay funcionalidades para realizar balances mensuales y gestionar los vestidos: listar, editar, eliminar, crear nuevos, subir imágenes y alquilarlos. Además, incorporé un sistema de roles que restringe el acceso a ciertas áreas; por ejemplo, las empleadas no pueden acceder a los balances ni ver los precios. También añadí una tabla que muestra los vestidos alquilados y todas las operaciones relacionadas.",
    link: "#",
    github: "https://github.com/AlejoTss23/PaginaWeb-Chloe",
    image: "/Chloepr.webp",
    tags: [TAGS.SPRING, TAGS.ANGULAR, TAGS.TAILWIND],
  },

  {
    title: "Clubes Emergentes.",
    description:
      "Desarrollé una página web para Clubes Emergentes, enfocada en proporcionar información detallada sobre diversos clubes. Utilicé un diseño simple con Bootstrap, centrando mi atención en la lógica y funcionalidad de los distintos componentes más que en el aspecto visual. Desde el panel de administración, implementé la creación de encuestas para los usuarios, permitiendo recopilar sus respuestas y generar estadísticas representadas en gráficos. Incorporé un mapa interactivo con puntos que señalan la ubicación e información de cada club.La plataforma incluye una tabla de clubes con operaciones CRUD (Crear, Leer, Actualizar y Eliminar), y modales de detalles para obtener información específica de cada entidad. También es posible asignar respuestas de encuestas a clubes particulares. Añadí una agenda de contactos y la funcionalidad para enviar correos electrónicos masivos a los usuarios. El sitio cuenta con un panel de usuarios, sistema de inicio de sesión y la capacidad de cargar datos masivamente mediante archivos Excel.",
    link: "#",
    github: "https://github.com/AlejoTss23/Frontend-Clubes",
    image: "/clubesemergentes.webp",
    tags: [TAGS.SPRING, TAGS.ANGULAR, TAGS.BOOTSTRAP],
  },

  {
    title: "Proyecto Final.",
    description:
      "Desarrollé un sistema como proyecto final que incluye un sistema de roles para gestionar el trabajo diario. Los trabajadores pueden acceder a una sección de administración donde completan un formulario detallando las tareas realizadas en el día, indicando el lugar, la cantidad de horas trabajadas, y la parte del edificio donde se llevó a cabo el trabajo. Por otro lado, los administradores tienen acceso a la información registrada por los trabajadores, con la posibilidad de visualizar todas las actividades del día. Además, implementé una funcionalidad que permite descargar esta información como imagen, brindando una forma práctica de archivar y gestionar los datos diarios.",
    link: "#",
    github: "https://github.com/AlejoTss23/Proyecto-Final-F",
    image: "/522shots_so.webp",
    tags: [TAGS.SPRING, TAGS.ANGULAR, TAGS.TAILWIND],
  },

  {
    title: "Tarifador Automatico para Importaciones.",
    description: "Desarrollé un tarifador automático que permite calcular los costos asociados a importaciones mediante tres modalidades diferentes: marítimo, aéreo y alquiler de metros cúbicos de contenedores, cada una con su propia lógica de cálculo. En la modalidad marítima, el sistema calcula el costo total de la importación teniendo en cuenta el monto base, los impuestos aplicables y las tarifas marítimas específicas. En la modalidad aérea, el cálculo se basa en el peso bruto o el peso volumétrico del envío, seleccionando el mayor de los dos para determinar el flete internacional y sumando los impuestos correspondientes. Para el alquiler de metros cúbicos de contenedores, el sistema estima el costo según el espacio utilizado dentro del contenedor, calculando el flete en función de las toneladas o el peso volumétrico y aplicando las tarifas e impuestos específicos. Este tarifador automatiza el proceso, ofreciendo una herramienta precisa y eficiente para estimar los costos finales de importación.",
    link: "#",
    github: "https://github.com/AlejoTss23/Tarifador-automatico",
    image: "/tarifador.webp",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT],
  },
];
---

{
  PROYECTS.map(({ image, title, description, tags }) => (
    <article class="mb-4">
      <h3 class="text-xl lg:text-2xl  font-semibold text-yellow-200 mb-2">{title}</h3>
      <p class="text-xl mb-4 text-white">{description}</p>
      <ul class="flex gap-x-2 flex-row">
        {tags.map((tag) => (
          <li>
            <span
              class={`flex  gap-x-2 rounded-full mb-4 text-xs ${tag.class} py-2 px-1`}
            >
              <tag.icon class="size-4" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
      <img
        class="rounded shadow-2xl shadow-white/10"
        src={image}
        alt={`captura de pantalla del proyecto ${image}`}
      />
    </article>
  ))
}
